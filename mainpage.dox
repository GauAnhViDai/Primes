/// @mainpage
/// @section About
///
/// primesieve is a library for fast prime number generation. Its
/// repository is hosted on GitHub: 
/// https://github.com/kimwalisch/primesieve.
///
/// primesieve is written in C++03, multi-threading is implemented
/// using OpenMP 2.0 (2002) or later. primesieve is very portable, it
/// builds on most Unix-like operating system (GNU Autotools) and
/// Windows (MSVC) is also supported.
///
/// primesieve generates primes using a highly optimized
/// implementation of the segmented sieve of Eratosthenes. It
/// generates the primes below 10^9 in just 0.2 seconds on a single
/// core of an Intel Core i7-4770 CPU from 2013. primesieve can
/// generate primes up to 2^64 - 2^32 * 10. primesieve's memory
/// requirement is about pi(sqrt(n)) * 8 bytes per thread (pi(x) is
/// the prime counting function).
///
/// @section CPP_API C++ API
///
/// @li @link primesieve.hpp primesieve.hpp @endlink - primesieve C++ header.
/// @li @link primesieve_iterator.cpp primesieve_iterator.cpp @endlink - Example that shows how to iterate over primes using a primesieve::iterator object. 
/// @li @link count_primes.cpp count_primes.cpp @endlink - Example that shows how to count primes.
///
/// @section C_API C API
///
/// @li @link primesieve.h primesieve.h @endlink - primesieve C header.
/// @li @link primesieve_iterator.c primesieve_iterator.c @endlink - Example that shows how to iterate over primes using the @link primesieve_iterator.h primesieve_iterator @endlink C data structure.
/// @li @link count_primes.c count_primes.c @endlink - Example that shows how to count primes.
///
