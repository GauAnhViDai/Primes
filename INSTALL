######################################################################
# Compilation guide for primesieve (console version)
#
# Author:        Kim Walisch
# Contact:       kim.walisch@gmail.com
# Created:       10 July 2010
# Last modified: 15 December 2011
#
# Project home:  http://primesieve.googlecode.com
######################################################################

  I. About
  ========

  This file explains how to compile the primesieve console
  application, to compile the primesieve GUI application please refer
  to src/qt-gui/INSTALL.

  II. How to build primesieve
  ===========================

  Unzip the source archive, then open a terminal or 'Visual Studio 
  Command Prompt' and cd into the primesieve directory.
  Now use one of the following make commands to build primesieve with
  your favorite C++ compiler:

  Microsoft Visual C++
  --------------------
  > nmake -f Makefile.msvc

  GNU g++
  -------
  $ make

  Other C++ compilers (icpc, sunCC, clang++, ...)
  -----------------------------------------------
  $ make CXX=my_compiler

  NOTE: The make command compiles the primesieve binary to ./out

  III. How to test it
  ===================

  > out\primesieve -help
  Shows usage examples and an option summary.
  > out\primesieve -test
  Runs various sieving tests to check if primesieve produces correct
  results.

  NOTE: for Unix-like operating systems use out/./primesieve

  IV. Target a specific CPU
  =========================

  You can indicate your CPU's L1 (data) cache and L2 cache sizes per
  core to get the best performance e.g.:

  $ make L1_DCACHE_SIZE=64 L2_CACHE_SIZE=512

  V. Compiler benchmark
  =====================

  Here are some primesieve (v. 3.1) timings for various C++ compilers
  measured on an Intel Core-i5 670 3.46GHz with DDR3-1333 running
  Fedora 16 64-bit and Windows 7 64-bit. Best time in seconds to sieve
  (single-threaded) an interval of size 1E10 starting at 1E18:

  $ ./primesieve-3.1 1E18 -o1E10 -t1

  Compiler                    Optimization flags   OS        Time/s   Rating
  --------------------------------------------------------------------------
  Intel C++ Compiler 12.0     -O2 -ipo -prof-use   Linux     14.95    100%
  Microsoft Visual C++ 2010   /O2 /GL              Windows   15.34     97%
  GNU g++ 4.4                 -O2 -funroll-loops   Linux     15.44     97%
  SunStudio 12                -fast -xrestrict     Linux     15.53     96%
  Mingw-w64 g++ 4.6           -O2                  Windows   15.78     95%
  LLVM/clang++ 2.8            -O2                  Linux     17.22     87%
