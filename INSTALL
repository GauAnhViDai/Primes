######################################################################
# Compilation guide for primesieve (console version)
#
# Author:        Kim Walisch
# Contact:       kim.walisch@gmail.com
# Created:       10 July 2010 
# Last modified: 22 October 2011
#
# Project home:  http://primesieve.googlecode.com
######################################################################

  I. About
  ========

  This file explains how to compile the primesieve console
  application, to compile the primesieve GUI application please refer
  to src/qt-gui/INSTALL.

  II. How to build primesieve
  ===========================

  Open a terminal or 'Visual Studio Command Prompt' unzip the source
  archive and cd into the primesieve directory. Then use one of the
  following make commands to build primesieve with your favorite C++
  compiler:

  Microsoft Visual C++
  --------------------
  > nmake -f Makefile.msvc

  GNU g++
  -------
  $ make

  Other C++ compilers (icpc, sunCC, clang++, ...)
  -----------------------------------------------
  $ make CXX=my_compiler

  NOTE: The make command compiles the primesieve binary to ./out

  III. How to test it
  ===================

  > out\primesieve -help
  Shows usage examples and an option summary.
  > out\primesieve -test
  Runs various sieving tests to check if primesieve produces correct
  results.

  NOTE: for Unix-like operating systems use out/./primesieve

  IV. Target a specific CPU
  =========================

  You can indicate your CPU's L1 (data) and L2 cache sizes per core to
  get the best performance e.g.:

  $ make L1_DCACHE_SIZE=64 L2_CACHE_SIZE=512

  V. Compiler benchmark
  =====================

  Here are some primesieve (v. 3.1) timings for various C++ compilers
  measured on an Intel Core-i5 670 3.46GHz and DDR3-1333 running
  Windows 7 64-bit and Fedora 13 64-bit. Best time in seconds to sieve
  an interval of size 1E10 starting at 1E18 using a single thread:

  $ ./primesieve-3.1 1E18 -o1E10 -t1

  Compiler                    Optimization flags   Time/s   Rating
  ----------------------------------------------------------------
  Microsoft Visual C++ 2010   /O2 /GL              15.26    100%
  Intel C++ Compiler 12.0     -O2 -ipo -prof-use   15.31    100%
  Mingw-w64 g++ 4.6           -O2                  15.78     97%
  GNU g++ 4.4                 -O2 -funroll-loops   15.84     96%
  SunStudio 12                -fast -xrestrict     15.87     96%
  LLVM/clang++ 2.8            -O2                  17.75     86%
