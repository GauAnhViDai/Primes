/*
 * ArithmeticExpression.h -- This file is part of primesieve
 *
 * Copyright (C) 2011 Kim Walisch, <kim.walisch@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

/**
 * @file ArithmeticExpression.h
 * @author Kim Walisch <kim.walisch@gmail.com>
 * @brief This is a wrapper class for Parsifal's Arithmetic Expression
 *        Evaluator <www.parsifalsoft.com> which is written in C and
 *        has been generated by their AnaGram parser.
 *
 * Their Readme files says:
 * >> evaluateExpression may be freely copied and modified.
 *
 * CHANGES:
 *
 * I polished the C from 1999 for use in my C++ project
 * <http://primesieve.googlecode.com>. These are the major
 * modifications I have made in evaldefs.h, evalkern.h, evalkern.c and
 * evalwrap.c:
 *
 * 1. Use of extern "C" for usage in C++ project
 * 2. double changed to uint64_t (better precision near 1e19) type
 *    from stdint.h
 * 3. Uninitialized variables are set to UINT64_MAX instead
 *    of 0
 * 4. Removed use of strdup (not ANSI) and sprintf (causes 
 *    unsafe warnings)
 * 5. Added (char*) cast for strings to silence warnings
 * 6. Unused file evaldemo.c has been deleted
 *
 * NOTE:
 *
 * The original source archive can be obtained from:
 * http://www.parsifalsoft.com/examples/evalexpression/index.html
 *
 * @warning As 64 bit unsigned integers are used for all calculations
 *          one has to be careful with divisions and negative numbers:
 *          i.e. (10/6)*10 = 10
 *
 * EXAMPLES of valid expressions:
 *
 * "3+5"
 * "2**32"
 * "1e18+1e10"
 * "23*5 + (7 * 2**32 / (1e18 % 555))"
 * "x=333"
 * "sqrt(10**14)"
 */

#ifndef ARITHMETICEXPRESSION_H
#define ARITHMETICEXPRESSION_H

#include <stdint.h>
#include <string>
#include <sstream>
extern "C" {
#include "evaldefs.h"
}

class ArithmeticExpression
{
public:
  ArithmeticExpression();
  std::string getExpression() const;
  std::string getErrorMessage() const;
  uint64_t getResult() const;
  bool evaluate(std::string);
private:
  std::string expression_;
  std::ostringstream errorMessage_;
  uint64_t result_;
};

#endif // ARITHMETICEXPRESSION_H
